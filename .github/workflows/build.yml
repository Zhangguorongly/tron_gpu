name: Build Tron GPU Vanity Generator

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 用 Chocolatey 安装 CUDA（绕开 tool-cache）
      - name: Install CUDA 12.2 via Chocolatey
        shell: powershell
        run: |
          choco install cuda --version=12.2.0 -y --no-progress
          # 加入 PATH，保证 nvcc 可用
          echo "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.2\bin" >> $env:GITHUB_PATH
          echo "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.2\libnvvp" >> $env:GITHUB_PATH
          nvcc --version

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install vcpkg + OpenSSL
        shell: powershell
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install openssl:x64-windows

      - name: Configure (CMake)
        shell: bash
        run: >
          cmake -B build -S .
          -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}\vcpkg\scripts\buildsystems\vcpkg.cmake"
          -A x64
          -DCMAKE_CUDA_ARCHITECTURES=89

      - name: Build (Release)
        run: cmake --build build --config Release

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: tron_gpu_exe
          path: build/Release/tron_gpu.exe
