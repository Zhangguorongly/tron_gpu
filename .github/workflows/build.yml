name: Build Tron GPU Vanity Generator

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120  # CUDA 下载比较大，给足时间

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 用 Chocolatey 安装“当前仓库里可用的最新 CUDA”
      - name: Install CUDA via Chocolatey (latest available)
        shell: powershell
        run: |
          choco install cuda -y --no-progress
          # 选出安装后的最新 CUDA 目录，写入 PATH & 环境变量
          $cudaRoot = (Get-ChildItem "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA" `
                       | Sort-Object Name -Descending | Select-Object -First 1).FullName
          echo "$cudaRoot\bin"     >> $env:GITHUB_PATH
          echo "$cudaRoot\libnvvp" >> $env:GITHUB_PATH
          echo "CUDA_PATH=$cudaRoot" >> $env:GITHUB_ENV
          nvcc --version

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install vcpkg + OpenSSL
        shell: powershell
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install openssl:x64-windows

      - name: Configure (CMake)
        shell: bash
        run: >
          cmake -B build -S .
          -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}\vcpkg\scripts\buildsystems\vcpkg.cmake"
          -A x64
          -DCMAKE_CUDA_ARCHITECTURES=89

      - name: Build (Release)
        run: cmake --build build --config Release

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: tron_gpu_exe
          path: build/Release/tron_gpu.exe
